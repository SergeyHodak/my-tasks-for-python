def safe_pawns(pawns: set) -> int:
    """
    Шахматы - это стратегическая игра двух игроков, которая разыгрывается на
    игровой доске с клетками, расположенными в восьми рядах (называемых
    горизонталями и обозначаемых цифрами от 1 до 8) и в восьми колонках
    (называемых вертикалями и обозначаемых буквами от a до h). Каждая клетка
    доски идентифицируется уникальной парой координат, состоящей из буквыи цифры
    (например, "a1", "h8", "d6"). В этой задаче мы будем иметь дело только с
    пешками. Пешка может бить пешку противника, которая находится перед ней в
    соседней клетке по диагонали справа или слева, переходя в эту клетку. У
    белых пешек клетки перед ними имеют номер горизонтали на единицу больше.

    Сама по себе пешка является слабой фигурой, но мы можем использовать до
    восьми пешек для построения оборонительной стены. Стратегия оборонительной
    стены основывается на защите друг друга. Пешка защищена, если её клетка
    находится по ударом другой своей пешки. На игровом поле находятся только
    белые пешки. Вы должны разработать код, позволяющий определить сколько
    пешек защищены в этой позиции.
    """
    a = str("abcdefgh")  # строка имён столблцев
    p = 0  # счетчик защищенных пешек
    for i in pawns:  # пробежка по позициям пешек
        if "a" in i and not "1" in i:  # если это левый край, и не самый низ
            if "b"+str(int(i[1])-1) in pawns:  # если внизу справа есть пешка
                p += 1  # фиксируем эту позицию как под защитой
        elif "h" in i and not "1" in i:  # если это правый край, и не самый низ
            if "g"+str(int(i[1])-1) in pawns:  # если внизу слева есть пешка
                p += 1  # фиксируем эту позицию как под защитой
        elif "1" in i:  # если это нижний край
            pass  # пешка не может быть защищена с за пределов поля игры, позиция не в счет защищенных
        else:  # если нет краев
            if str(a[a.index(i[0])-1]) + str(int(i[1])-1) in pawns:  # проверка снизу слева наличия защиты
                p += 1  # фиксируем эту позицию как под защитой
            elif str(a[a.index(i[0])+1]) + str(int(i[1])-1) in pawns:  # проверка снизу справа наличия защиты
                p += 1  # фиксируем эту позицию как под защитой
    return p  # выдача результата

if __name__ == '__main__':
    # Эти "assert" используются только для самопроверки и не требуются для автоматического тестирования.
    assert safe_pawns({"b4", "d4", "f4", "c3", "e3", "g5", "d2"}) == 6
    assert safe_pawns({"b4", "c4", "d4", "e4", "f4", "g4", "e5"}) == 1
    print("Кодирование завершено? Нажмите 'Check', чтобы просмотреть свои тесты и получить классные награды!")