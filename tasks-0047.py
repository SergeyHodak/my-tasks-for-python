"""
    У Джо Палоки толстые пальцы, поэтому он всегда нажимает клавишу «Caps Lock», когда на самом деле намеревается
    нажать клавишу «a» самостоятельно. (Когда Джо пытается ввести некоторую версию «а» с акцентом, для которой
    требуется большее количество нажатий клавиш, чтобы вызвать акценты, он более осторожен в присутствии таких
    рафинированных символов ([Shift] + [Char]) и будет нажимать клавиши правильно.) Вычислить и вернуть результат
    ввода Джо в заданный текст. Клавиша «Caps Lock» влияет только на буквенные клавиши от «a» до «z» и не влияет
    на другие клавиши или символы. Предполагается, что клавиша «Caps Lock» изначально отключена.
"""
def caps_lock(text: str) -> str:
    a = ""  # строка для выдачи результата
    i = 0  # шагатель
    r = 0  # «Caps Lock» выключен
    while i < len(text):  # пробежка по символам текста
        if i != 0:  # если это не первая позиция
            if r == 1:  # до этой позиции был верхний регистр.
                if text[i].isupper():  # если в верхнем регистре
                    while r == 1:  # пока снова не нажмут «Caps Lock»
                        if text[i].isupper():  # если в верхнем регистре
                            if text[i] not in "aA":  # если это не "a"
                                a += text[i].upper() # записать в верхнем регистре
                                i += 1  # повысить значение шагателя
                            else:  # если это "a"
                                r = 0  # активация нижнего регистра
                                i += 1  # повысить значение шагателя
                        else:  # если в нижнем регистре
                            r = 0  # активация нижнего регистра
                else:  # если в нижнем регистре
                    r = 0  # активация нижнего регистра
                    while r == 0:  # пока снова не нажмут «Caps Lock»
                        if text[i].isupper():  # если в верхнем регистре
                            r = 1  # активация верхнего регистра
                        else:  # если в нижнем регистре
                            if text[i] not in "aA":  # если это не "a"
                                a += text[i].lower()  # записать в нижнем регистре
                                i += 1  # повысить значение шагателя
                            else:  # если это "a"
                                r = 1  # активация верхнего регистра
                                i += 1  # повысить значение шагателя
            else:  # r==0.  до этой позиции был нижний регистр. А сейчас?
                if text[i].isupper():  # если в верхнем регистре
                    while r == 1:  # пока снова не нажмут «Caps Lock»
                        if text[i].isupper():  # если в верхнем регистре
                            if text[i] not in "aA":  # если это не "a"
                                a += text[i].upper() # записать в верхнем регистре
                                i += 1  # повысить значение шагателя
                            else:  # если это "a"
                                r = 0  # активация нижнего регистра
                                i += 1  # повысить значение шагателя
                        else:  # если в нижнем регистре
                            r = 0  # активация нижнего регистра
                else:  # если в нижнем регистре
                    while r == 0:  # пока снова не нажмут «Caps Lock»
                        if text[i].isupper():  # если в верхнем регистре
                            r = 1  # активация верхнего регистра
                        else:  # если в нижнем регистре
                            if text[i] not in "aA":  # если это не "a"
                                a += text[i].lower() # записать в нижнем регистре
                                i += 1  # повысить значение шагателя
                            else:  # если это "a"
                                r = 1  # активация верхнего регистра
                                i += 1  # повысить значение шагателя
        else:  # первая позиция
            if text[0].isupper():  # если в верхнем регистре
                r = 1  # активация верхнего регистра
                a += text[0]  # записать букву без изменений
                i += 1  # повысить значение шагателя
            else:  # если в нижнем регистре
                a += text[0]  # записать букву без изменений
                i += 1  # повысить значение шагателя
    return a


if __name__ == "__main__":
    print("Пример:")
    print(caps_lock("Why are you asking me that?"))

    # Эти "asserts" используются для самопроверки, а не для автоматического тестирования.
    assert caps_lock("Why are you asking me that?") == "Why RE YOU sking me thT?"
    assert caps_lock("Always wanted to visit Zambia.") == "AlwYS Wnted to visit ZMBI."
    print("Кодирование завершено? Нажмите 'Check', чтобы получить отличные награды!")