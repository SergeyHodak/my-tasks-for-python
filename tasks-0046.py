"""
    Панграмма ("каждая буква") или предложение состоящее из разных букв алфавита,
    используя каждую букву по крайней мере один раз. Возможно, вы знакомы с хорошо
    известными панграммами "Эй, жлоб! Где туз? Прячь юных съёмщиц в шкаф" или
    "Любя, съешь щипцы, — вздохнёт мэр, — кайф жгуч".
    Для этого задания, вы будете использовать латинский алфавит (A-Z). У вас есть
    текст с латинскими буквами и знаками препинания. Вы должны проверить является
    ли предложение панграммой или нет. Регистр не имеет значения.
    Как это используется: Панграммы используют для отображения шрифтов,
    тестирования оборудования, развития почерка,
    каллиграфии и набора текста на клавиатуре.
"""
def check_pangram(text):
    text = text.lower()  # перевод все в нижний регистр
    a = "abcdefghijklmnopqrstuvwxyz"  # английский алфавит
    b = []  # пустой список для анализа
    for i in range(0, len(a)):  # количество шагов равно количеству букв в алфавите
        b.append(text.count(a[i]))  # записать по позицию проверяемой буквы, ее повторение в тексте
    if 0 in b:  # если ноль есть в списке построенном для анализа
        return False  # не панграмма
    else:  # ноликов нету, значит все буквы в тексте встречаются как минимум по одному разу
        return True  # панграмма


if __name__ == '__main__':
    # Эти "asserts" используются для самопроверки, а не для автоматического тестирования.
    assert check_pangram("The quick brown fox jumps over the lazy dog."), "brown fox"  # True
    assert not check_pangram("ABCDEF"), "ABC"  # False, не все буквы (6из26)
    assert check_pangram("abcdefghijklmnopqrstuvwxyz")  # True
    assert check_pangram("Bored? Craving a pub quiz fix? Why, just come to the Royal Oak!"), "Bored?"  # True
    assert not check_pangram("Six big devils from Japan quickly forgot how to walt.")  # False, нету буквы "z" (25из26)
    print('Если это сделано - это сделано. Проверить СЕЙЧАС!')