"""
    Даны две строки со словами, разделенными запятыми.
    Попробуйте найти что общего между этими строками.
    Слова внутри каждой строки не повторяются.
    Ваша функция должна находить все слова, которые появляются в обеих строках.
    Результат должен быть представлен, как строка со словами
    разделенными запятыми и отсортированными в алфавитном порядке.
    Предусловия:
    - Каждая строка содержит не более 10 слов.
    - Все слова разделены запятыми.
    - Все слова состоят только из латинских букв в нижнем регистре.
"""
def checkio(line1: str, line2: str) -> str:
    a = line1.split(",")  # поделит на слова по запятой
    b = line2.split(",")  # поделит на слова по запятой
    c = []  # пустой список для сортировки
    for i in range(0, len(a)):  # пробежка по первой переменной
        if a[i] in b:  # если это слово присутствует во второй переменной
            c.append(a[i])  # записать встречующееся слово в двух переменных
    if len(c) == 0:  # если повторяющихся нет
        return ''  # выдать пустой результата
    c = sorted(c)  # сортировать по алфавиту
    return ",".join(c)  # конвертация списка в строку. в "" указывается то что будет запятые между аргументами

if __name__ == '__main__':
    print("Пример:")
    print(checkio('hello,world', 'hello,earth'))

    # Эти "asserts" используются для самопроверки, а не для автоматического тестирования.
    assert checkio('hello,world', 'hello,earth') == 'hello'
    assert checkio('one,two,three', 'four,five,six') == ''
    assert checkio('one,two,three', 'four,five,one,two,six,three') == 'one,three,two'
    print("Кодирование завершено? Нажмите 'Check', чтобы получить отличные награды!")