def checkio(values: list) -> list:
    """
    Давайте посмотрим на сортировку. Дан массив с особыми правилами.
    Массив (a list) содержит различные числа. Вам необходимо отсортировать их, но отсортировать на основе абсолютных
    значений, и возрастающем в порядке возростания. Для примера, последовательность (-20, -5, 10, 15) будет
    отсортирована следующим образом (-5, 10, 15, -20). Ваша функция должна возвращать список (list) или кортеж (tuple).
    Предусловия : len(set(abs(x) for x in array)) == len(array)
        0 < len(array) < 100
        all(isinstance(x, int) for x in array)
        all(-100 < x < 100 for x in array)
    """
    a = []  # пустой список для сортировки
    for i in values:  # пробежка по "values"
        a.append(abs(i))  # записать без знака минус
    a = sorted(a)  # отсортировать
    b = []  # пустой список для вывода
    for i in range(0, len(a)):  # пробежка по отсортированному списку
        if a[i] in values:  # если абсолютное значение присутствует в даваемом списке
            b.append(a[i])  # записать его на вывод без изменений
        else:  # если не присутсвует
            b.append(-a[i])  # добавить с минусом
    return b  # выдать результат


if __name__ == '__main__':
    print("Пример:")
    print(checkio([-20, -5, 10, 15]))

    # Эти "asserts" используются для самопроверки, а не для автоматического тестирования.
    assert checkio([-20, -5, 10, 15]) == [-5, 10, 15, -20]
    assert checkio([1, 2, 3, 0]) == [0, 1, 2, 3]
    assert checkio([-1, -2, -3, 0]) == [0, -1, -2, -3]
    print("Кодирование завершено? Нажмите 'Check', чтобы получить отличные награды!")