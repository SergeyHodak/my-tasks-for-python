"""
    Вы предпочитаете использовать 12-часовой формат времени, но современный мир живет в
    24-часовом формате и вы видите это повсюду. Ваша задача - переконвертировать время
    из 24-часового формата в 12-часовой, использкя следующие правила:
    - выходной формат должен быть 'чч:мм a.m.' (для часов до полудня)
        или 'чч:мм p.m.' (для часов после полудня);
    - если часы меньше 10 - не пишите '0' перед ними. Например: '9:05 a.m.'
"""


def time_converter(time):
    if 0 < int(time[:2]) < 12:  # если часы не нужно переводить
        if int(time[0]) == 0:  # если присутствует ноль в начале
            return time[1:] + " a.m."  # выдать без нолика + формат "до полудня"
        else:  # если нету нолика
            return time + " a.m."  # выдать время + формат "до полудня"
    elif time[:2] == "00":  # если на часах 00
        return "12" + time[2:] + " a.m."  # выдать утреннее время
    else:  # нужно переводить
        if int(time[:2]) == 12:  # если это 12
            return time + " p.m."  # выдать время + формат "после полудня"
        return str(12-(24 - int(time[:2]))) + time[2:] + " p.m."  # выдать время + формат "после полудня"


if __name__ == '__main__':
    print("Пример:")
    print(time_converter('00:00'))  # "12:00 a.m."

    # Эти "asserts" используются только для самопроверки и не требуются для автоматического тестирования.
    assert time_converter('12:30') == '12:30 p.m.'
    assert time_converter('09:00') == '9:00 a.m.'
    assert time_converter('23:15') == '11:15 p.m.'
    print("Кодирование завершено? Нажмите 'Check', чтобы получить отличные награды!")